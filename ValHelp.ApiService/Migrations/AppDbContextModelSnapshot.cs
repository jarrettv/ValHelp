// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ValHelp.ApiService.Config;

#nullable disable

namespace ValHelp.ApiService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ValHelp.ApiService.Modules.Tournament.Hunt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("desc");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Prizes")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("prizes");

                    b.Property<string>("Scoring")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("scoring");

                    b.Property<string>("Seed")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("seed");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_at");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("pk_hunts");

                    b.ToTable("hunts", (string)null);
                });

            modelBuilder.Entity("ValHelp.ApiService.Modules.Tournament.HuntPlayer", b =>
                {
                    b.Property<int>("HuntId")
                        .HasColumnType("integer")
                        .HasColumnName("hunt_id");

                    b.Property<string>("PlayerId")
                        .HasColumnType("text")
                        .HasColumnName("player_id");

                    b.Property<int>("Deaths")
                        .HasColumnType("integer")
                        .HasColumnName("deaths");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Relogs")
                        .HasColumnType("integer")
                        .HasColumnName("relogs");

                    b.Property<int>("Score")
                        .HasColumnType("integer")
                        .HasColumnName("score");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Stream")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("stream");

                    b.PrimitiveCollection<List<string>>("Trophies")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("trophies");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("HuntId", "PlayerId")
                        .HasName("pk_hunts_player");

                    b.ToTable("hunts_player", (string)null);
                });

            modelBuilder.Entity("ValHelp.ApiService.Modules.Tournament.TrackHunt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CurrentScore")
                        .HasColumnType("integer")
                        .HasColumnName("current_score");

                    b.Property<int>("Deaths")
                        .HasColumnType("integer")
                        .HasColumnName("deaths");

                    b.Property<string>("Gamemode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gamemode");

                    b.Property<int>("Logouts")
                        .HasColumnType("integer")
                        .HasColumnName("logouts");

                    b.Property<string>("PlayerLocation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("player_location");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("player_name");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("session_id");

                    b.PrimitiveCollection<List<string>>("Trophies")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("trophies");

                    b.HasKey("Id")
                        .HasName("pk_track_hunts");

                    b.ToTable("track_hunts", (string)null);
                });

            modelBuilder.Entity("ValHelp.ApiService.Modules.Tournament.HuntPlayer", b =>
                {
                    b.HasOne("ValHelp.ApiService.Modules.Tournament.Hunt", null)
                        .WithMany("Players")
                        .HasForeignKey("HuntId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_hunts_player_hunts_hunt_id");
                });

            modelBuilder.Entity("ValHelp.ApiService.Modules.Tournament.Hunt", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
